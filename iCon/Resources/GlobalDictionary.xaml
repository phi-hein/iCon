<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:iCon_General"
                    xmlns:customContr="clr-namespace:iCon_General.CustomControls">
    
    <!-- OBJECTS -->
    
    <!-- Local binding proxy for viewmodel (espacially for datagridcolumnheaders) -->
    <local:BindingProxy x:Key="locBindingProxy"/>

    <!-- Provides a list of possible atom label modes (espacially for comboboxes) -->
    <ObjectDataProvider x:Key="odpAtomLabelModeList" MethodName="GetValues" ObjectType="{x:Type local:TAtomLabelMode}">
        <ObjectDataProvider.MethodParameters>
            <x:Type TypeName="local:TAtomLabelMode"/>
        </ObjectDataProvider.MethodParameters>
    </ObjectDataProvider>

    <!-- Button icons -->
    <DataTemplate x:Key="BTP_ZoomExtents">
        <Path Margin="1" StrokeThickness="1" StrokeStartLineCap="Round" StrokeEndLineCap="Round" Stroke="Blue" Fill="Blue"
              Stretch="Uniform" VerticalAlignment="Center" HorizontalAlignment="Center"
              Data="M 2,0 H 0 V 2 Z M 8,0 H 10 V 2 Z M 0,8 V 10 H 2 Z M 8,10 H 10 V 8 Z"/>
    </DataTemplate>
    <DataTemplate x:Key="BTP_DefaultCamera">
        <Grid>
            <Path Margin="1" StrokeThickness="1" StrokeStartLineCap="Round" StrokeEndLineCap="Round" Stroke="Blue" Fill="Blue"
              Stretch="Uniform" VerticalAlignment="Center" HorizontalAlignment="Center"
              Data="M 2,0 H 0 V 2 Z M 8,0 H 10 V 2 Z M 0,8 V 10 H 2 Z M 8,10 H 10 V 8 Z"/>
            <Path Margin="3.5 3 2.5 3" StrokeThickness="1" StrokeStartLineCap="Round" StrokeEndLineCap="Round" Stroke="Blue" Fill="Transparent"
              Stretch="Uniform" VerticalAlignment="Center" HorizontalAlignment="Center"
              Data="M 5,0 A 5,5 45 1 0 10,5 V 3 L 12,5 M 10,4 L 8,5"/>
        </Grid>
    </DataTemplate>
    <DataTemplate x:Key="BTP_UpdateModel">
        <Path Margin="1.5 1 0.5 1" StrokeThickness="2" StrokeStartLineCap="Round" StrokeEndLineCap="Round" Stroke="Blue" Fill="Transparent"
            Stretch="Uniform" VerticalAlignment="Center" HorizontalAlignment="Center"
            Data="M 5,0 A 5,5 45 1 0 10,5 V 3 L 12,5 M 10,4 L 8,5"/>
    </DataTemplate>
    <DataTemplate x:Key="BTP_SaveViewport">
        <Path Margin="1" StrokeThickness="1" StrokeStartLineCap="Round" StrokeEndLineCap="Round" Stroke="Blue" Fill="Transparent"
              Stretch="Uniform" VerticalAlignment="Center" HorizontalAlignment="Center"
              Data="M 0,1 V 9 L 1,10 H 9 L 10,9 V 2 L 8,0 H 1 Z M 2,10 V 5 H 8 V 10 M 3,0 V 3 H 7 V 0 M 4,0 V 3 M 5,0 V 3"/>
    </DataTemplate>

    <!-- Images -->
    <BitmapImage x:Key="PNG_AppImageSmall" UriSource="/Resources/Images/CeO2JumpSmall.png"/>

    <!-- Converters -->
    <local:InvertConverterClass x:Key="InvertConverter"/>
    <local:StrToIntConverterClass x:Key="StrToIntConverter"/>
    <local:StrToLongConverterClass x:Key="StrToLongConverter"/>
    <local:StrToDoubleConverterClass x:Key="StrToDoubleConverter"/>

    <!-- Colors -->
    <Color x:Key="GUIMainGray">#FFCDCDCD</Color>
    <Color x:Key="GUIMainSlightGray">#FFF0F0F0</Color>
    <Color x:Key="GUIMainBorderGray">#FF9B9B9B</Color>
    <Color x:Key="GUIMainSeparatorGray">#FFABABAB</Color>
    <Color x:Key="GUIMainErrorColor">#FFFF0000</Color>

    <!-- SolidColorBrushes -->
    <SolidColorBrush x:Key="GUIMainGrayBrush" Color="{StaticResource GUIMainGray}"/>
    <SolidColorBrush x:Key="GUIMainSlightGrayBrush" Color="{StaticResource GUIMainSlightGray}"/>
    <SolidColorBrush x:Key="GUIMainBorderGrayBrush" Color="{StaticResource GUIMainBorderGray}"/>
    <SolidColorBrush x:Key="GUIMainSeparatorGrayBrush" Color="{StaticResource GUIMainSeparatorGray}"/>
    <SolidColorBrush x:Key="GUIMainErrorColorBrush" Color="{StaticResource GUIMainErrorColor}"/>

    <!-- CONTROL TEMPLATE OBJECTS -->

    <!-- ControlTemplate for empty Validation.ErrorTemplate -->
    <ControlTemplate x:Key="BorderErrorTemplate">
        <Grid>
            <AdornedElementPlaceholder/>
            <Rectangle Height="2" VerticalAlignment="Top" HorizontalAlignment="Stretch" Fill="{StaticResource GUIMainErrorColorBrush}"
                       Stroke="{StaticResource GUIMainErrorColorBrush}"/>
            <Rectangle Height="2" VerticalAlignment="Bottom" HorizontalAlignment="Stretch" Fill="{StaticResource GUIMainErrorColorBrush}"
                       Stroke="{StaticResource GUIMainErrorColorBrush}"/>
            <Rectangle Width="2" VerticalAlignment="Stretch" HorizontalAlignment="Left" Fill="{StaticResource GUIMainErrorColorBrush}"
                       Stroke="{StaticResource GUIMainErrorColorBrush}"/>
            <Rectangle Width="2" VerticalAlignment="Stretch" HorizontalAlignment="Right" Fill="{StaticResource GUIMainErrorColorBrush}"
                       Stroke="{StaticResource GUIMainErrorColorBrush}"/>
        </Grid>
    </ControlTemplate>

    <!-- BORDER SHADOW RECTANGLES -->
    
    <!-- Rectangle style for a top border with shadow downwards -->
    <Style TargetType="{x:Type Rectangle}" x:Key="DownBorderRectStyle">
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="Fill">
            <Setter.Value>
                <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                    <GradientStop Color="{StaticResource GUIMainBorderGray}" Offset="0"/>
                    <GradientStop Color="Transparent" Offset="1"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Rectangle style for a bottom border with shadow upwards -->
    <Style TargetType="{x:Type Rectangle}" x:Key="UpBorderRectStyle">
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="Fill">
            <Setter.Value>
                <LinearGradientBrush StartPoint="0.5,1" EndPoint="0.5,0">
                    <GradientStop Color="{StaticResource GUIMainBorderGray}" Offset="0"/>
                    <GradientStop Color="Transparent" Offset="1"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Rectangle style for a left border with shadow to the right -->
    <Style TargetType="{x:Type Rectangle}" x:Key="RightBorderRectStyle">
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="Fill">
            <Setter.Value>
                <LinearGradientBrush StartPoint="0,0.5" EndPoint="1,0.5">
                    <GradientStop Color="{StaticResource GUIMainBorderGray}" Offset="0"/>
                    <GradientStop Color="Transparent" Offset="1"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Rectangle style for a right border with shadow to the left -->
    <Style TargetType="{x:Type Rectangle}" x:Key="LeftBorderRectStyle">
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="Fill">
            <Setter.Value>
                <LinearGradientBrush StartPoint="1,0.5" EndPoint="0,0.5">
                    <GradientStop Color="{StaticResource GUIMainBorderGray}" Offset="0"/>
                    <GradientStop Color="Transparent" Offset="1"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- STYLES RELATED TO TABS -->
    
    <!-- Style for tab item header labels -->
    <Style TargetType="{x:Type Label}" x:Key="TabItemLabelStyle">
        <Setter Property="Height" Value="16"/>
        <Setter Property="Padding" Value="0 0 0 0"/>
    </Style>
    
    <!-- Style for tab item header close buttons -->
    <Style TargetType="{x:Type customContr:ContentToggleButton}" x:Key="TabItemCloseButtonStyle">
        <Style.Resources>
            <DataTemplate x:Key="dtCrossTransparent">
                <Path Margin="2" StrokeThickness="2" StrokeStartLineCap="Round" StrokeEndLineCap="Round"
                      Stroke="Transparent" 
                      Stretch="Uniform" VerticalAlignment="Center" HorizontalAlignment="Center" 
                      Data="M0,0 L10,10 M0,10 L10,0"/>
            </DataTemplate>
            
            <DataTemplate x:Key="dtCrossGray">
                <Path Margin="2" StrokeThickness="2" StrokeStartLineCap="Round" StrokeEndLineCap="Round"
                      Stroke="Gray" 
                      Stretch="Uniform" VerticalAlignment="Center" HorizontalAlignment="Center" 
                      Data="M0,0 L10,10 M0,10 L10,0"/>
            </DataTemplate>
            
            <DataTemplate x:Key="dtCrossBlack">
                <Path Margin="2" StrokeThickness="2" StrokeStartLineCap="Round" StrokeEndLineCap="Round"
                      Stroke="Black" 
                      Stretch="Uniform" VerticalAlignment="Center" HorizontalAlignment="Center" 
                      Data="M0,0 L10,10 M0,10 L10,0"/>
            </DataTemplate>
        </Style.Resources>
        <Setter Property="Height" Value="14"/>
        <Setter Property="Width" Value="14"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="3 0 -5 0"/>
        <Setter Property="Padding" Value="0 0 0 0"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="CornerRadius" Value="2"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="ContentTemplate" Value="{StaticResource dtCrossTransparent}"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Background" Value="WhiteSmoke"/>
                <Setter Property="ContentTemplate" Value="{StaticResource dtCrossGray}"/>
            </Trigger>
            <Trigger Property="IsChecked" Value="true">
                <Setter Property="ContentTemplate" Value="{StaticResource dtCrossGray}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <Setter Property="Background" Value="Gray"/>
                <Setter Property="BorderBrush" Value="Black"/>
                <Setter Property="ContentTemplate" Value="{StaticResource dtCrossBlack}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Style for color changing tab item headers -->
    <Style TargetType="{x:Type TabItem}" x:Key="MainTabItemStyle">  
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Border x:Name="Border" Background="Transparent" BorderThickness="0 0 0 0" Margin="-2 -1 2 -1">
                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center" ContentSource="Header" 
                              Margin="12,2,12,2" RecognizesAccessKey="True"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter Property="Panel.ZIndex" Value="100" />
                            <Setter TargetName="Border" Property="Background">
                                <Setter.Value>
                                    <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                        <GradientStop Color="{StaticResource GUIMainBorderGray}" Offset="0"/>
                                        <GradientStop Color="{StaticResource GUIMainGray}" Offset="1"/>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="false"/>
                                <Condition Property="IsMouseOver" Value="true"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource GUIMainGrayBrush}"/>
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Border" Property="Background" Value="Transparent"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Styling for main tab controls -->
    <Style TargetType="{x:Type TabControl}" x:Key="MainTabControlStyle">
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                    <GradientStop Color="{StaticResource GUIMainGray}" Offset="0"/>
                    <GradientStop Color="Transparent" Offset="1"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="Padding" Value="0 0 0 5"/>
        <Setter Property="Margin" Value="0 0 0 8"/>
        <Setter Property="BorderThickness" Value="1 0 1 1"/>
        <Setter Property="BorderBrush" Value="{StaticResource GUIMainGrayBrush}"/>
    </Style>
    
    <!-- BUTTON STYLES -->
    
    <!-- Style for left column closing button -->
    <Style TargetType="{x:Type customContr:ContentToggleButton}" x:Key="LeftColumnCloseButton">
        <Style.Resources>
            <DataTemplate x:Key="dtOpenSign">
                <Path Margin="1" StrokeThickness="2" StrokeStartLineCap="Round" StrokeEndLineCap="Round"
                      Stroke="Black" Stretch="Uniform" VerticalAlignment="Center" HorizontalAlignment="Center"
                      Data="M0,5 L5,10 M0,5 L5,0"/>
            </DataTemplate>
            <DataTemplate x:Key="dtClosedSign">
                <Path Margin="1" StrokeThickness="2" StrokeStartLineCap="Round" StrokeEndLineCap="Round"
                      Stroke="Black" Stretch="Uniform" VerticalAlignment="Center" HorizontalAlignment="Center"
                      Data="M0,10 L5,5 M0,0 L5,5"/>
            </DataTemplate>
        </Style.Resources>
        <Setter Property="Width" Value="8"/>
        <Setter Property="Height" Value="26"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="#FF707070"/>
        <Setter Property="CornerRadius" Value="2"/>
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                    <GradientStop Color="#FFF3F3F3" Offset="0"/>
                    <GradientStop Color="#FFEBEBEB" Offset="0.5"/>
                    <GradientStop Color="#FFDDDDDD" Offset="0.5"/>
                    <GradientStop Color="#FFCDCDCD" Offset="1"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="ContentTemplate" Value="{StaticResource dtOpenSign}"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Background">
                    <Setter.Value>
                        <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                            <GradientStop Color="#FFEEEEEE" Offset="0"/>
                            <GradientStop Color="#FFE0E0E0" Offset="0.5"/>
                            <GradientStop Color="#FFD4D4D4" Offset="0.5"/>
                            <GradientStop Color="#FFB2B2B2" Offset="1"/>
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsChecked" Value="false">
                <Setter Property="ContentTemplate" Value="{StaticResource dtClosedSign}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Style for right column closing button -->
    <Style TargetType="{x:Type customContr:ContentToggleButton}" x:Key="RightColumnCloseButton">
        <Style.Resources>
            <DataTemplate x:Key="dtOpenSign">
                <Path Margin="1" StrokeThickness="2" StrokeStartLineCap="Round" StrokeEndLineCap="Round"
                      Stroke="Black" Stretch="Uniform" VerticalAlignment="Center" HorizontalAlignment="Center"
                      Data="M0,10 L5,5 M0,0 L5,5"/>
            </DataTemplate>
            <DataTemplate x:Key="dtClosedSign">
                <Path Margin="1" StrokeThickness="2" StrokeStartLineCap="Round" StrokeEndLineCap="Round"
                      Stroke="Black" Stretch="Uniform" VerticalAlignment="Center" HorizontalAlignment="Center"
                      Data="M0,5 L5,10 M0,5 L5,0"/> 
            </DataTemplate>
        </Style.Resources>
        <Setter Property="Width" Value="8"/>
        <Setter Property="Height" Value="26"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="#FF707070"/>
        <Setter Property="CornerRadius" Value="2"/>
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                    <GradientStop Color="#FFF3F3F3" Offset="0"/>
                    <GradientStop Color="#FFEBEBEB" Offset="0.5"/>
                    <GradientStop Color="#FFDDDDDD" Offset="0.5"/>
                    <GradientStop Color="#FFCDCDCD" Offset="1"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="ContentTemplate" Value="{StaticResource dtOpenSign}"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Background">
                    <Setter.Value>
                        <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                            <GradientStop Color="#FFEEEEEE" Offset="0"/>
                            <GradientStop Color="#FFE0E0E0" Offset="0.5"/>
                            <GradientStop Color="#FFD4D4D4" Offset="0.5"/>
                            <GradientStop Color="#FFB2B2B2" Offset="1"/>
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsChecked" Value="false">
                <Setter Property="ContentTemplate" Value="{StaticResource dtClosedSign}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Style for top row closing button -->
    <Style TargetType="{x:Type customContr:ContentToggleButton}" x:Key="TopRowCloseButton">
        <Style.Resources>
            <DataTemplate x:Key="dtOpenSign">
                <Path Margin="1" StrokeThickness="2" StrokeStartLineCap="Round" StrokeEndLineCap="Round"
                      Stroke="Black" Stretch="Uniform" VerticalAlignment="Center" HorizontalAlignment="Center"
                      Data="M0,0 L5,5 M5,5 L10,0"/>
            </DataTemplate>
            <DataTemplate x:Key="dtClosedSign">
                <Path Margin="1" StrokeThickness="2" StrokeStartLineCap="Round" StrokeEndLineCap="Round"
                      Stroke="Black" Stretch="Uniform" VerticalAlignment="Center" HorizontalAlignment="Center"
                      Data="M0,5 L5,0 M5,0 L10,5"/>
            </DataTemplate>
        </Style.Resources>
        <Setter Property="Width" Value="26"/>
        <Setter Property="Height" Value="8"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="#FF707070"/>
        <Setter Property="CornerRadius" Value="2"/>
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                    <GradientStop Color="#FFF3F3F3" Offset="0"/>
                    <GradientStop Color="#FFEBEBEB" Offset="0.5"/>
                    <GradientStop Color="#FFDDDDDD" Offset="0.5"/>
                    <GradientStop Color="#FFCDCDCD" Offset="1"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="ContentTemplate" Value="{StaticResource dtOpenSign}"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Background">
                    <Setter.Value>
                        <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                            <GradientStop Color="#FFEEEEEE" Offset="0"/>
                            <GradientStop Color="#FFE0E0E0" Offset="0.5"/>
                            <GradientStop Color="#FFD4D4D4" Offset="0.5"/>
                            <GradientStop Color="#FFB2B2B2" Offset="1"/>
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsChecked" Value="false">
                <Setter Property="ContentTemplate" Value="{StaticResource dtClosedSign}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Style for bottom row closing button -->
    <Style TargetType="{x:Type customContr:ContentToggleButton}" x:Key="BottomRowCloseButton">
        <Style.Resources>
            <DataTemplate x:Key="dtOpenSign">
                <Path Margin="1" StrokeThickness="2" StrokeStartLineCap="Round" StrokeEndLineCap="Round"
                      Stroke="Black" Stretch="Uniform" VerticalAlignment="Center" HorizontalAlignment="Center"
                      Data="M0,5 L5,0 M5,0 L10,5"/>
            </DataTemplate>
            <DataTemplate x:Key="dtClosedSign">
                <Path Margin="1" StrokeThickness="2" StrokeStartLineCap="Round" StrokeEndLineCap="Round"
                      Stroke="Black" Stretch="Uniform" VerticalAlignment="Center" HorizontalAlignment="Center"
                      Data="M0,0 L5,5 M5,5 L10,0"/> 
            </DataTemplate>
        </Style.Resources>
        <Setter Property="Width" Value="26"/>
        <Setter Property="Height" Value="8"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="#FF707070"/>
        <Setter Property="CornerRadius" Value="2"/>
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                    <GradientStop Color="#FFF3F3F3" Offset="0"/>
                    <GradientStop Color="#FFEBEBEB" Offset="0.5"/>
                    <GradientStop Color="#FFDDDDDD" Offset="0.5"/>
                    <GradientStop Color="#FFCDCDCD" Offset="1"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="ContentTemplate" Value="{StaticResource dtOpenSign}"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Background">
                    <Setter.Value>
                        <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                            <GradientStop Color="#FFEEEEEE" Offset="0"/>
                            <GradientStop Color="#FFE0E0E0" Offset="0.5"/>
                            <GradientStop Color="#FFD4D4D4" Offset="0.5"/>
                            <GradientStop Color="#FFB2B2B2" Offset="1"/>
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsChecked" Value="false">
                <Setter Property="ContentTemplate" Value="{StaticResource dtClosedSign}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- STYLES REFERRING TO INPUT GUI ELEMENTS -->
    
    <Style TargetType="{x:Type Button}" x:Key="StdButtonStyle">
        <Setter Property="Padding" Value="15 2 15 2"/>
        <Setter Property="Margin" Value="5 0 5 0"/>
        <Setter Property="ToolTipService.ShowOnDisabled" Value="True"/>
        <Setter Property="ToolTipService.ShowDuration" Value="8000"/>
    </Style>
    
    <Style TargetType="{x:Type Button}" x:Key="StdMiniButtonStyle">
        <Setter Property="Height" Value="16"/>
        <Setter Property="Width" Value="16"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="0 0 0 0"/>
        <Setter Property="Margin" Value="2 0 2 0"/>
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="ToolTipService.ShowOnDisabled" Value="True"/>
        <Setter Property="ToolTipService.ShowDuration" Value="8000"/>
    </Style>

    <Style TargetType="{x:Type Label}" x:Key="StdInputLabelStyle">
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Padding" Value="5 5 5 5"/>
    </Style>

    <Style TargetType="{x:Type TextBlock}" x:Key="ContextMenuTextBlockStyle">
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Padding" Value="0 0 0 0"/>
        <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type MenuItem}}, Path=Foreground}"/>
    </Style>

    <Style TargetType="{x:Type RadioButton}" x:Key="StdInputRadioButtonStyle">
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Padding" Value="5 5 5 5"/>
        <Setter Property="Margin" Value="5 10 0 0"/>
    </Style>
    
    <Style TargetType="{x:Type TextBox}" x:Key="StdInputTextBoxStyle">
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1 1 1 1"/>
        <Setter Property="MaxLength" Value="20"/>
        <Setter Property="ToolTipService.ShowOnDisabled" Value="True"/>
        <Setter Property="ToolTipService.ShowDuration" Value="16000"/>
        <Setter Property="Validation.ErrorTemplate" Value="{StaticResource BorderErrorTemplate}"/>
        <Style.Triggers>
            <Trigger Property="Validation.HasError" Value="True">
                <Setter Property="local:ToolTipHelper.ErrorToolTip" 
                        Value="{Binding Path=(Validation.Errors).CurrentItem.ErrorContent, RelativeSource={RelativeSource Self}}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type TextBox}" x:Key="ContextMenuTextBoxStyle">
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Padding" Value="0 0 0 0"/>
        <Setter Property="MaxLength" Value="20"/>
        <Setter Property="ToolTipService.ShowOnDisabled" Value="True"/>
        <Setter Property="ToolTipService.ShowDuration" Value="16000"/>
        <Setter Property="Validation.ErrorTemplate" Value="{StaticResource BorderErrorTemplate}"/>
        <Style.Triggers>
            <Trigger Property="Validation.HasError" Value="True">
                <Setter Property="local:ToolTipHelper.ErrorToolTip" 
                        Value="{Binding Path=(Validation.Errors).CurrentItem.ErrorContent, RelativeSource={RelativeSource Self}}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type TextBox}" x:Key="StdReadOnlyTextBoxStyle">
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="IsReadOnly" Value="true"/>
        <Setter Property="Background" Value="{StaticResource GUIMainSlightGrayBrush}"/>
        <Setter Property="ToolTipService.ShowOnDisabled" Value="True"/>
        <Setter Property="ToolTipService.ShowDuration" Value="16000"/>
    </Style>
    
    <Style TargetType="{x:Type StackPanel}" x:Key="StdInputStackpanelStyle">
        <Setter Property="Orientation" Value="Vertical"/>
        <Setter Property="Margin" Value="5 3 5 0"/>
    </Style>

    <Style TargetType="{x:Type TextBox}" x:Key="MultilineInputTextBoxStyle">
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="AcceptsReturn" Value="true"/>
        <Setter Property="MaxLength" Value="10000"/>
        <Setter Property="VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ToolTipService.ShowOnDisabled" Value="True"/>
        <Setter Property="ToolTipService.ShowDuration" Value="16000"/>
        <Setter Property="Validation.ErrorTemplate" Value="{StaticResource BorderErrorTemplate}"/>
        <Style.Triggers>
            <Trigger Property="Validation.HasError" Value="True">
                <Setter Property="local:ToolTipHelper.ErrorToolTip" 
                        Value="{Binding Path=(Validation.Errors).CurrentItem.ErrorContent, RelativeSource={RelativeSource Self}}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type TextBox}" x:Key="MultilineReadOnlyTextBoxStyle">
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="AcceptsReturn" Value="true"/>
        <Setter Property="IsReadOnly" Value="true"/>
        <Setter Property="VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ToolTipService.ShowOnDisabled" Value="True"/>
        <Setter Property="ToolTipService.ShowDuration" Value="16000"/>
    </Style>

    <Style TargetType="{x:Type DockPanel}" x:Key="MultilineInputDockpanelStyle">
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="Margin" Value="5 3 5 0"/>
    </Style>
    
    <Style TargetType="{x:Type DataGrid}" x:Key="StdInputDataGridStyle">
        <Setter Property="AutoGenerateColumns" Value="false"/>
        <Setter Property="HeadersVisibility" Value="Column"/>
        <Setter Property="CanUserAddRows" Value="false"/>
        <Setter Property="CanUserDeleteRows" Value="false"/>
        <Setter Property="CanUserResizeRows" Value="false"/>
        <Setter Property="HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="SelectionMode" Value="Single"/>
        <Setter Property="SelectionUnit" Value="FullRow"/>
    </Style>
    
    <Style TargetType="{x:Type Rectangle}" x:Key="StdSepInTabRectangleStyle">
        <Setter Property="Fill" Value="{StaticResource GUIMainSeparatorGrayBrush}"/>
        <Setter Property="Margin" Value="5 8 5 8"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Height" Value="1"/>
    </Style>
    
    <Style TargetType="{x:Type CheckBox}" x:Key="StdCheckBoxStyle">
        <Setter Property="Margin" Value="5 5 5 5"/>
        <Setter Property="ToolTipService.ShowOnDisabled" Value="True"/>
        <Setter Property="ToolTipService.ShowDuration" Value="16000"/>
    </Style>

    <Style TargetType="{x:Type CheckBox}" x:Key="StdOptionsCheckBoxStyle">
        <Setter Property="Margin" Value="0 5 5 5"/>
        <Setter Property="ToolTipService.ShowOnDisabled" Value="True"/>
        <Setter Property="ToolTipService.ShowDuration" Value="16000"/>
    </Style>

    <Style TargetType="{x:Type TextBlock}" x:Key="StdDataGridHeaderTextBlockStyle">
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="ToolTipService.ShowOnDisabled" Value="True"/>
        <Setter Property="ToolTipService.ShowDuration" Value="16000"/>
    </Style>
    
    <Style TargetType="{x:Type TextBlock}" x:Key="StdToolTipStyle">
        <Setter Property="MaxWidth" Value="300"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
    </Style>

    <Style TargetType="{x:Type TextBox}" x:Key="StdEditingCellStyle">
        <Setter Property="Validation.ErrorTemplate" Value="{x:Null}"/>
        <Setter Property="Margin" Value="0 0 0 0"/>
        <Setter Property="Padding" Value="0 0 0 0"/>
        <Setter Property="BorderThickness" Value="0 0 0 0"/>
        <Setter Property="MaxLength" Value="20"/>
        <Setter Property="MinHeight" Value="0"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="ToolTipService.ShowOnDisabled" Value="True"/>
        <Setter Property="ToolTipService.ShowDuration" Value="16000"/>
        <Style.Triggers>
            <Trigger Property="Validation.HasError" Value="True">
                <Setter Property="local:ToolTipHelper.ErrorToolTip" 
                        Value="{Binding Path=(Validation.Errors).CurrentItem.ErrorContent, RelativeSource={RelativeSource Self}}"/>
                <Setter Property="Background" Value="{StaticResource GUIMainErrorColorBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type TextBlock}" x:Key="StdCellStyle">
        <Setter Property="Validation.ErrorTemplate" Value="{x:Null}"/>
        <Setter Property="Margin" Value="0 0 0 0"/>
        <Setter Property="Padding" Value="2 0 2 0"/>
        <Setter Property="ToolTipService.ShowOnDisabled" Value="True"/>
        <Setter Property="ToolTipService.ShowDuration" Value="16000"/>
        <Style.Triggers>
            <Trigger Property="Validation.HasError" Value="True">
                <Setter Property="local:ToolTipHelper.ErrorToolTip" 
                        Value="{Binding Path=(Validation.Errors).CurrentItem.ErrorContent, RelativeSource={RelativeSource Self}}"/>
                <Setter Property="Background" Value="{StaticResource GUIMainErrorColorBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type TextBox}" x:Key="ReadOnlyCellStyle">
        <Setter Property="IsReadOnly" Value="True"/>
        <Setter Property="Margin" Value="0 0 0 0"/>
        <Setter Property="Padding" Value="2 0 2 0"/>
        <Setter Property="BorderThickness" Value="0 0 0 0"/>
        <Setter Property="MinHeight" Value="0"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
    </Style>

    <Style TargetType="{x:Type TextBlock}" x:Key="ToolTipCellStyle">
        <Setter Property="Margin" Value="2 0 2 0"/>
        <Setter Property="ToolTipService.ShowOnDisabled" Value="True"/>
        <Setter Property="ToolTipService.ShowDuration" Value="16000"/>
        <Setter Property="ToolTipService.ToolTip">
            <Setter.Value>
                <ToolTip DataContext="{Binding Path=PlacementTarget, RelativeSource={RelativeSource Self}}">
                    <TextBlock Text="{Binding Text}" Style="{StaticResource StdToolTipStyle}"/>
                </ToolTip>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Text" Value="">
                <Setter Property="ToolTipService.IsEnabled" Value="False"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="V3DControlButtonStyle" BasedOn="{StaticResource {x:Static ToolBar.ButtonStyleKey}}">
        <Setter Property="Height" Value="20"/>
        <Setter Property="Width" Value="20"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="BorderBrush" Value="{StaticResource GUIMainBorderGrayBrush}"/>
        <Setter Property="ToolTipService.ShowOnDisabled" Value="True"/>
        <Setter Property="ToolTipService.ShowDuration" Value="8000"/>
    </Style>

    <Style TargetType="{x:Type customContr:OptionsGroupBox}" x:Key="3DOptionsGroupBoxStyle">
        <Setter Property="LabelFontWeight" Value="SemiBold"/>
        <Setter Property="Margin" Value="2"/>
        <Setter Property="Padding" Value="5"/>
        <Setter Property="CornerRadius" Value="5"/>
        <Setter Property="Background" Value="{StaticResource GUIMainSlightGrayBrush}"/>
    </Style>

    <Style TargetType="{x:Type ComboBox}" x:Key="StdOptionsComboBoxStyle">
        <Setter Property="Padding" Value="5 2 0 5"/>
        <Setter Property="Margin" Value="0 0 0 0"/>
        <Setter Property="MinWidth" Value="45"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="IsReadOnly" Value="True"/>
        <Setter Property="ToolTipService.ShowOnDisabled" Value="True"/>
        <Setter Property="ToolTipService.ShowDuration" Value="16000"/>
    </Style>

    <Style TargetType="{x:Type PasswordBox}" x:Key="StdInputPasswordBoxStyle">
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1 1 1 1"/>
        <Setter Property="MaxLength" Value="20"/>
        <Setter Property="ToolTipService.ShowOnDisabled" Value="True"/>
        <Setter Property="ToolTipService.ShowDuration" Value="16000"/>
    </Style>

    <!-- STYLES REFERRING TO MAIN MENU -->
    
    <!-- Styling for main menu -->
    <Style TargetType="{x:Type Menu}" x:Key="MainMenuStyle">
        <Setter Property="FontSize" Value="12"/>        
    </Style>

    <!-- DATA TEMPLATE OBJECTS -->

    <!-- DataTemplate for DataGrid cells without content -->
    <DataTemplate x:Key="EmptyDatagridCellTemplate">
        <TextBlock Text=""/>
    </DataTemplate>

    <!-- DataTemplate for DataGrid cells in non-editing mode -->
    <DataTemplate x:Key="ReadonlyDatagridCellTemplate">
        <TextBlock Text="{Binding Energy, UpdateSourceTrigger=LostFocus, Converter={StaticResource StrToDoubleConverter}}" 
                   Style="{StaticResource StdCellStyle}"/>
    </DataTemplate>

    <!-- DataTemplate for editable cells of DataGrid columns -->
    <DataTemplate x:Key="EditableDatagridCellTemplate">
        <TextBox Text="{Binding Energy, UpdateSourceTrigger=LostFocus, Converter={StaticResource StrToDoubleConverter}}" 
                 Style="{StaticResource StdEditingCellStyle}"/>
    </DataTemplate>

</ResourceDictionary>